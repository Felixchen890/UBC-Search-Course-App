{"/Users/chenpinyue/Documents/cs310/project_team097/src/controller/IInsightFacade.ts":{"path":"/Users/chenpinyue/Documents/cs310/project_team097/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1},"f":{"0":1,"1":0,"2":0,"3":0},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/chenpinyue/Documents/cs310/project_team097/src/controller/IInsightFacade.ts","sources":["/Users/chenpinyue/Documents/cs310/project_team097/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport interface InsightResult {\n\t[key: string]: string | number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3e0d829dcd9914485cb955776c22696d8cb018d7","contentHash":"8bbf1179ba0e9c7a5122ee7e8db94277d550539df1a898096266fd2d5d642426"},"/Users/chenpinyue/Documents/cs310/project_team097/src/controller/InsightFacade.ts":{"path":"/Users/chenpinyue/Documents/cs310/project_team097/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":89}},"4":{"start":{"line":4,"column":71},"end":{"line":4,"column":83}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"6":{"start":{"line":6,"column":26},"end":{"line":6,"column":33}},"7":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"8":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":72}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"11":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"13":{"start":{"line":15,"column":31},"end":{"line":15,"column":42}},"14":{"start":{"line":16,"column":17},"end":{"line":16,"column":19}},"15":{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},"16":{"start":{"line":17,"column":21},"end":{"line":17,"column":141}},"17":{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},"18":{"start":{"line":17,"column":109},"end":{"line":17,"column":141}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":36}},"20":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"21":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":62}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":62}},"24":{"start":{"line":25,"column":25},"end":{"line":25,"column":52}},"25":{"start":{"line":26,"column":16},"end":{"line":26,"column":49}},"26":{"start":{"line":27,"column":11},"end":{"line":27,"column":44}},"27":{"start":{"line":28,"column":20},"end":{"line":28,"column":59}},"28":{"start":{"line":29,"column":23},"end":{"line":29,"column":48}},"29":{"start":{"line":30,"column":23},"end":{"line":30,"column":48}},"30":{"start":{"line":33,"column":8},"end":{"line":33,"column":23}},"31":{"start":{"line":34,"column":8},"end":{"line":34,"column":29}},"32":{"start":{"line":35,"column":8},"end":{"line":35,"column":32}},"33":{"start":{"line":36,"column":8},"end":{"line":36,"column":28}},"34":{"start":{"line":37,"column":8},"end":{"line":37,"column":49}},"35":{"start":{"line":40,"column":8},"end":{"line":48,"column":9}},"36":{"start":{"line":41,"column":12},"end":{"line":41,"column":113}},"37":{"start":{"line":43,"column":13},"end":{"line":48,"column":9}},"38":{"start":{"line":44,"column":12},"end":{"line":44,"column":93}},"39":{"start":{"line":46,"column":13},"end":{"line":48,"column":9}},"40":{"start":{"line":47,"column":12},"end":{"line":47,"column":101}},"41":{"start":{"line":49,"column":8},"end":{"line":49,"column":50}},"42":{"start":{"line":52,"column":8},"end":{"line":56,"column":9}},"43":{"start":{"line":53,"column":12},"end":{"line":55,"column":13}},"44":{"start":{"line":54,"column":16},"end":{"line":54,"column":28}},"45":{"start":{"line":57,"column":8},"end":{"line":57,"column":21}},"46":{"start":{"line":60,"column":8},"end":{"line":64,"column":9}},"47":{"start":{"line":60,"column":21},"end":{"line":60,"column":22}},"48":{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},"49":{"start":{"line":62,"column":16},"end":{"line":62,"column":29}},"50":{"start":{"line":65,"column":8},"end":{"line":65,"column":20}},"51":{"start":{"line":68,"column":23},"end":{"line":68,"column":44}},"52":{"start":{"line":69,"column":25},"end":{"line":69,"column":27}},"53":{"start":{"line":70,"column":28},"end":{"line":70,"column":30}},"54":{"start":{"line":71,"column":8},"end":{"line":71,"column":79}},"55":{"start":{"line":72,"column":8},"end":{"line":74,"column":11}},"56":{"start":{"line":73,"column":12},"end":{"line":73,"column":53}},"57":{"start":{"line":75,"column":22},"end":{"line":75,"column":54}},"58":{"start":{"line":76,"column":8},"end":{"line":90,"column":9}},"59":{"start":{"line":77,"column":12},"end":{"line":89,"column":13}},"60":{"start":{"line":78,"column":29},"end":{"line":78,"column":45}},"61":{"start":{"line":79,"column":33},"end":{"line":79,"column":49}},"62":{"start":{"line":80,"column":16},"end":{"line":82,"column":17}},"63":{"start":{"line":81,"column":20},"end":{"line":81,"column":29}},"64":{"start":{"line":83,"column":34},"end":{"line":83,"column":36}},"65":{"start":{"line":84,"column":16},"end":{"line":84,"column":99}},"66":{"start":{"line":85,"column":32},"end":{"line":85,"column":50}},"67":{"start":{"line":88,"column":16},"end":{"line":88,"column":25}},"68":{"start":{"line":91,"column":31},"end":{"line":91,"column":67}},"69":{"start":{"line":92,"column":8},"end":{"line":92,"column":47}},"70":{"start":{"line":93,"column":8},"end":{"line":93,"column":64}},"71":{"start":{"line":94,"column":27},"end":{"line":98,"column":9}},"72":{"start":{"line":99,"column":8},"end":{"line":99,"column":40}},"73":{"start":{"line":100,"column":8},"end":{"line":100,"column":37}},"74":{"start":{"line":101,"column":28},"end":{"line":101,"column":41}},"75":{"start":{"line":102,"column":8},"end":{"line":102,"column":46}},"76":{"start":{"line":105,"column":20},"end":{"line":105,"column":22}},"77":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"78":{"start":{"line":107,"column":12},"end":{"line":107,"column":31}},"79":{"start":{"line":109,"column":8},"end":{"line":109,"column":21}},"80":{"start":{"line":112,"column":18},"end":{"line":112,"column":31}},"81":{"start":{"line":113,"column":8},"end":{"line":121,"column":9}},"82":{"start":{"line":114,"column":12},"end":{"line":114,"column":113}},"83":{"start":{"line":116,"column":13},"end":{"line":121,"column":9}},"84":{"start":{"line":117,"column":12},"end":{"line":117,"column":93}},"85":{"start":{"line":119,"column":13},"end":{"line":121,"column":9}},"86":{"start":{"line":120,"column":12},"end":{"line":120,"column":109}},"87":{"start":{"line":122,"column":16},"end":{"line":122,"column":33}},"88":{"start":{"line":123,"column":8},"end":{"line":127,"column":9}},"89":{"start":{"line":124,"column":12},"end":{"line":124,"column":47}},"90":{"start":{"line":128,"column":8},"end":{"line":128,"column":31}},"91":{"start":{"line":129,"column":26},"end":{"line":129,"column":28}},"92":{"start":{"line":130,"column":8},"end":{"line":135,"column":9}},"93":{"start":{"line":131,"column":34},"end":{"line":133,"column":14}},"94":{"start":{"line":132,"column":16},"end":{"line":132,"column":45}},"95":{"start":{"line":134,"column":12},"end":{"line":134,"column":46}},"96":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"97":{"start":{"line":137,"column":12},"end":{"line":137,"column":48}},"98":{"start":{"line":139,"column":8},"end":{"line":139,"column":40}},"99":{"start":{"line":140,"column":8},"end":{"line":140,"column":35}},"100":{"start":{"line":143,"column":16},"end":{"line":143,"column":17}},"101":{"start":{"line":144,"column":8},"end":{"line":151,"column":9}},"102":{"start":{"line":145,"column":12},"end":{"line":150,"column":13}},"103":{"start":{"line":146,"column":16},"end":{"line":146,"column":20}},"104":{"start":{"line":149,"column":16},"end":{"line":149,"column":25}},"105":{"start":{"line":152,"column":8},"end":{"line":152,"column":17}},"106":{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},"107":{"start":{"line":156,"column":12},"end":{"line":156,"column":39}},"108":{"start":{"line":158,"column":27},"end":{"line":158,"column":75}},"109":{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},"110":{"start":{"line":160,"column":12},"end":{"line":160,"column":91}},"111":{"start":{"line":162,"column":8},"end":{"line":167,"column":9}},"112":{"start":{"line":163,"column":12},"end":{"line":163,"column":43}},"113":{"start":{"line":166,"column":12},"end":{"line":166,"column":37}},"114":{"start":{"line":168,"column":27},"end":{"line":168,"column":96}},"115":{"start":{"line":169,"column":8},"end":{"line":169,"column":42}},"116":{"start":{"line":173,"column":8},"end":{"line":173,"column":42}},"117":{"start":{"line":176,"column":0},"end":{"line":176,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":5,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":58},"end":{"line":4,"column":59}},"loc":{"start":{"line":4,"column":69},"end":{"line":4,"column":85}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":6},"end":{"line":5,"column":7}},"loc":{"start":{"line":5,"column":28},"end":{"line":8,"column":1}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":80},"end":{"line":9,"column":81}},"loc":{"start":{"line":9,"column":95},"end":{"line":11,"column":1}},"line":9},"4":{"name":"(anonymous_4)","decl":{"start":{"line":11,"column":5},"end":{"line":11,"column":6}},"loc":{"start":{"line":11,"column":20},"end":{"line":13,"column":1}},"line":11},"5":{"name":"(anonymous_5)","decl":{"start":{"line":14,"column":50},"end":{"line":14,"column":51}},"loc":{"start":{"line":14,"column":65},"end":{"line":20,"column":1}},"line":14},"6":{"name":"(anonymous_6)","decl":{"start":{"line":21,"column":56},"end":{"line":21,"column":57}},"loc":{"start":{"line":21,"column":71},"end":{"line":23,"column":1}},"line":21},"7":{"name":"(anonymous_7)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":18},"end":{"line":38,"column":5}},"line":32},"8":{"name":"(anonymous_8)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":34},"end":{"line":50,"column":5}},"line":39},"9":{"name":"(anonymous_9)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":21},"end":{"line":58,"column":5}},"line":51},"10":{"name":"(anonymous_10)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":25},"end":{"line":66,"column":5}},"line":59},"11":{"name":"(anonymous_11)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":40},"end":{"line":103,"column":5}},"line":67},"12":{"name":"(anonymous_12)","decl":{"start":{"line":72,"column":25},"end":{"line":72,"column":26}},"loc":{"start":{"line":72,"column":55},"end":{"line":74,"column":9}},"line":72},"13":{"name":"(anonymous_13)","decl":{"start":{"line":104,"column":4},"end":{"line":104,"column":5}},"loc":{"start":{"line":104,"column":13},"end":{"line":110,"column":5}},"line":104},"14":{"name":"(anonymous_14)","decl":{"start":{"line":111,"column":4},"end":{"line":111,"column":5}},"loc":{"start":{"line":111,"column":22},"end":{"line":141,"column":5}},"line":111},"15":{"name":"(anonymous_15)","decl":{"start":{"line":131,"column":63},"end":{"line":131,"column":64}},"loc":{"start":{"line":131,"column":83},"end":{"line":133,"column":13}},"line":131},"16":{"name":"(anonymous_16)","decl":{"start":{"line":142,"column":4},"end":{"line":142,"column":5}},"loc":{"start":{"line":142,"column":17},"end":{"line":153,"column":5}},"line":142},"17":{"name":"(anonymous_17)","decl":{"start":{"line":154,"column":4},"end":{"line":154,"column":5}},"loc":{"start":{"line":154,"column":24},"end":{"line":170,"column":5}},"line":154},"18":{"name":"(anonymous_18)","decl":{"start":{"line":172,"column":4},"end":{"line":172,"column":5}},"loc":{"start":{"line":172,"column":19},"end":{"line":174,"column":5}},"line":172}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":8,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":8,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":5,"column":1}},{"start":{"line":5,"column":6},"end":{"line":8,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},{"start":{"line":6,"column":4},"end":{"line":6,"column":33}}],"line":6},"4":{"loc":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"type":"binary-expr","locations":[{"start":{"line":9,"column":26},"end":{"line":9,"column":30}},{"start":{"line":9,"column":34},"end":{"line":9,"column":57}},{"start":{"line":9,"column":63},"end":{"line":13,"column":1}}],"line":9},"5":{"loc":{"start":{"line":9,"column":63},"end":{"line":13,"column":1}},"type":"cond-expr","locations":[{"start":{"line":9,"column":80},"end":{"line":11,"column":1}},{"start":{"line":11,"column":5},"end":{"line":13,"column":1}}],"line":9},"6":{"loc":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"type":"binary-expr","locations":[{"start":{"line":14,"column":20},"end":{"line":14,"column":24}},{"start":{"line":14,"column":28},"end":{"line":14,"column":45}},{"start":{"line":14,"column":50},"end":{"line":20,"column":1}}],"line":14},"7":{"loc":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},{"start":{"line":15,"column":4},"end":{"line":15,"column":42}}],"line":15},"8":{"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":29}},"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":11}},{"start":{"line":15,"column":15},"end":{"line":15,"column":29}}],"line":15},"9":{"loc":{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},{"start":{"line":17,"column":4},"end":{"line":17,"column":141}}],"line":17},"10":{"loc":{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},"type":"if","locations":[{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},{"start":{"line":17,"column":40},"end":{"line":17,"column":141}}],"line":17},"11":{"loc":{"start":{"line":17,"column":44},"end":{"line":17,"column":107}},"type":"binary-expr","locations":[{"start":{"line":17,"column":44},"end":{"line":17,"column":59}},{"start":{"line":17,"column":63},"end":{"line":17,"column":107}}],"line":17},"12":{"loc":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"type":"binary-expr","locations":[{"start":{"line":21,"column":23},"end":{"line":21,"column":27}},{"start":{"line":21,"column":31},"end":{"line":21,"column":51}},{"start":{"line":21,"column":56},"end":{"line":23,"column":1}}],"line":21},"13":{"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":61}},"type":"cond-expr","locations":[{"start":{"line":22,"column":37},"end":{"line":22,"column":40}},{"start":{"line":22,"column":43},"end":{"line":22,"column":61}}],"line":22},"14":{"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":33}},"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":15}},{"start":{"line":22,"column":19},"end":{"line":22,"column":33}}],"line":22},"15":{"loc":{"start":{"line":40,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":48,"column":9}},{"start":{"line":40,"column":8},"end":{"line":48,"column":9}}],"line":40},"16":{"loc":{"start":{"line":43,"column":13},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":13},"end":{"line":48,"column":9}},{"start":{"line":43,"column":13},"end":{"line":48,"column":9}}],"line":43},"17":{"loc":{"start":{"line":46,"column":13},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":13},"end":{"line":48,"column":9}},{"start":{"line":46,"column":13},"end":{"line":48,"column":9}}],"line":46},"18":{"loc":{"start":{"line":53,"column":12},"end":{"line":55,"column":13}},"type":"if","locations":[{"start":{"line":53,"column":12},"end":{"line":55,"column":13}},{"start":{"line":53,"column":12},"end":{"line":55,"column":13}}],"line":53},"19":{"loc":{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},{"start":{"line":61,"column":12},"end":{"line":63,"column":13}}],"line":61},"20":{"loc":{"start":{"line":80,"column":16},"end":{"line":82,"column":17}},"type":"if","locations":[{"start":{"line":80,"column":16},"end":{"line":82,"column":17}},{"start":{"line":80,"column":16},"end":{"line":82,"column":17}}],"line":80},"21":{"loc":{"start":{"line":113,"column":8},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":113,"column":8},"end":{"line":121,"column":9}},{"start":{"line":113,"column":8},"end":{"line":121,"column":9}}],"line":113},"22":{"loc":{"start":{"line":116,"column":13},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":13},"end":{"line":121,"column":9}},{"start":{"line":116,"column":13},"end":{"line":121,"column":9}}],"line":116},"23":{"loc":{"start":{"line":119,"column":13},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":119,"column":13},"end":{"line":121,"column":9}},{"start":{"line":119,"column":13},"end":{"line":121,"column":9}}],"line":119},"24":{"loc":{"start":{"line":145,"column":12},"end":{"line":150,"column":13}},"type":"if","locations":[{"start":{"line":145,"column":12},"end":{"line":150,"column":13}},{"start":{"line":145,"column":12},"end":{"line":150,"column":13}}],"line":145},"25":{"loc":{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},"type":"if","locations":[{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},{"start":{"line":159,"column":8},"end":{"line":161,"column":9}}],"line":159},"26":{"loc":{"start":{"line":159,"column":12},"end":{"line":159,"column":78}},"type":"binary-expr","locations":[{"start":{"line":159,"column":12},"end":{"line":159,"column":37}},{"start":{"line":159,"column":41},"end":{"line":159,"column":55}},{"start":{"line":159,"column":59},"end":{"line":159,"column":78}}],"line":159}},"s":{"0":1,"1":146,"2":146,"3":146,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":1,"17":146,"18":146,"19":1,"20":1,"21":1,"22":2,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":1},"f":{"0":146,"1":0,"2":0,"3":1,"4":0,"5":1,"6":2,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"0":[1,1,1],"1":[1,0],"2":[146,0],"3":[0,0],"4":[1,1,1],"5":[1,0],"6":[1,1,1],"7":[0,1],"8":[1,1],"9":[1,0],"10":[146,0],"11":[146,146],"12":[1,1,1],"13":[1,1],"14":[2,2],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0]},"inputSourceMap":{"version":3,"file":"/Users/chenpinyue/Documents/cs310/project_team097/src/controller/InsightFacade.ts","sources":["/Users/chenpinyue/Documents/cs310/project_team097/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError\n} from \"./IInsightFacade\";\nimport {rejects} from \"assert\";\nimport JSZip, {JSZipObject} from \"jszip\";\nimport * as fs from \"fs-extra\";\nimport AddHelper from \"./AddHelper\";\n\nimport {CachedData} from \"./CachedData\";\n\nimport {QueryChecker} from \"./QueryChecker\";\nimport {QueryHandler} from \"./QueryHandler\";\n\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\nexport default class InsightFacade implements IInsightFacade {\n\t// declaration of class field\n\t// cachedDataSet: array of cachedData\n\t// : defined in CachedData.ts, represents a section with all its information\n\tpublic data: InsightDataset[] = [];\n\tprivate datasetIds: any[] = [];\n\tpublic cachedDataSet: CachedData[] = [];\n\n\n\tprivate datasetID = \"\";\n\n\tconstructor() {\n\t\tconsole.log(\"InsightFacadeImpl::init()\");\n\t}\n\n\t// todo: add the cachedDataset from addHelper to this.cachedDataSet\n\t// treat add dataset like a carrying job, after we put content inside, we need to submit a report for what is carried and what is not\n\t// the report is in form of Promise<string[]> in this case\n\tpublic addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\t// check two condition on id: it is a string of requirement and is not full white space string\n\t\tif(!(/^[^_]+$/.test(id))){\n\t\t\treturn Promise.reject(new InsightError(\"invalid id input, check underscore in id\"));\n\t\t}else if(this.isWhiteSpaceOnly(id)){\n\t\t\treturn Promise.reject(new InsightError(\"white space id error\"));\n\t\t}else if(this.hasDuplicate(id)){\n\t\t\treturn Promise.reject(new InsightError(\"dataset with same id existed\"));\n\t\t}\n\t\treturn this.addSection(id, content, kind);\n\t}\n\n\t// check whether the id given exist in the dataset list\n\tprivate hasDuplicate(id: string): boolean{\n\t\tfor(const set of this.data){\n\t\t\tif(set.id === id){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// check whether the id is only white space\n\tprivate isWhiteSpaceOnly(id: string): boolean {\n\t\tfor(let i = 0; i < id.length; i++){\n\t\t\tif(id.charAt(i) !== \" \"){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t// helper function for adding sections\n\tprivate async addSection(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\tlet sections = new JSZip();\n\t\t// list of data: the list of data that is going to be written into local disks\n\t\tlet listOfData: object[] = [];\n\t\t// list of promises: the list of promise<string> for intermediate holder of content: unicode string to list of promise\n\t\tlet listOfPromise: Array<Promise<string>> = [];\n\t\tawait (await sections.loadAsync(content, {base64: true})).folder(id);\n\t\tsections.forEach(function (relativePath, file){\n\t\t\tlistOfPromise.push(file.async(\"string\"));\n\t\t});\n\t\t// from arr of promise to arr of str (with content inside)\n\t\tlet arrFile: string[] = await Promise.all(listOfPromise);\n\t\t// ready object for adding\n\t\tfor(let file of arrFile){\n\t\t\ttry{\n\t\t\t\t// check whether file is valid to push into list of data\n\t\t\t\tlet curObj = JSON.parse(file);\n\t\t\t\tlet pushingObj = curObj[\"result\"];\n\t\t\t\t// console.log(pushingObj);\n\t\t\t\t// don't need to process empty data file\n\t\t\t\tif(pushingObj.length === 0){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// for(const section of pushingObj) {\n\t\t\t\t//\n\t\t\t\t// }\n\t\t\t\tlet finalResult = [];\n\t\t\t\tfinalResult.push(AddHelper.dataProcessorAdd(pushingObj, listOfData, id));\n\t\t\t\t// this.cachedDataSet = finalResult;\n\t\t\t\tlet testValue = this.cachedDataSet;\n\t\t\t\t// use add helper to get data to push\n\t\t\t}catch(e){\n\t\t\t\t// meet file that is either broken or doesn't match what we want, just continue to skip it\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tlet jsonStringObject: string = JSON.stringify({data: listOfData});\n\t\t// usage of writeFileSync learned from examples on https://www.geeksforgeeks.org/node-js-fs-writefilesync-method/\n\t\tfs.createFileSync(`./data/${id}.json`);\n\t\tfs.writeFileSync(`./data/${id}.json`, jsonStringObject);\n\t\tlet setToBeAdded: InsightDataset = {\n\t\t\tid: id,\n\t\t\tkind: kind,\n\t\t\tnumRows: listOfData.length\n\t\t};\n\t\tconsole.log(this.cachedDataSet);\n\t\tthis.data.push(setToBeAdded);\n\t\tlet resolveStrArr = this.getIDs();\n\t\treturn Promise.resolve(resolveStrArr);\n\t}\n\n\tprivate getIDs(): string[]{\n\t\tlet idArr: string[] = [];\n\t\tfor(let set of this.data){\n\t\t\tidArr.push(set.id);\n\t\t}\n\t\treturn idArr;\n\t}\n\n\n\tpublic removeDataset(id: string): Promise<string> {\n\t\tlet ids = this.getIDs();\n\t\t// step 1: check whether id is valid and the dataset to be removed exist in the structure\n\t\tif(!(/^[^_]+$/.test(id))){\n\t\t\treturn Promise.reject(new InsightError(\"invalid id input, check underscore in id\"));\n\t\t}else if(this.isWhiteSpaceOnly(id)){\n\t\t\treturn Promise.reject(new InsightError(\"white space id error\"));\n\t\t}else if(!ids.includes(id)){\n\t\t\treturn Promise.reject(new NotFoundError(\"dataset doesn't exist in the facade\"));\n\t\t}\n\t\t// step 2: delete the data (unlink locally) and toss it away from the data keeper in the structure\n\t\tlet i = this.getIndex(id);\n\t\t// data persistence sync delete from https://www.geeksforgeeks.org/node-js-fs-unlinksync-method/\n\t\ttry{\n\t\t\tfs.unlinkSync(`./data/${id}.json`);\n\t\t}catch(e){\n\t\t\t// stop\n\t\t}\n\t\tthis.data.splice(i, 1);\n\t\t// idea of splicing cached data with specific traits comes from https://bobbyhadz.com/blog/typescript-remove-element-from-array#remove-an-object-from-an-array-in-typescript\n\t\tlet listOfIndex: number[] = [];\n\t\tfor(let data of this.cachedDataSet){\n\t\t\tlet dataToBeSpliced = this.cachedDataSet.findIndex(function (data_sec){\n\t\t\t\treturn data_sec.setId === id;\n\t\t\t});\n\t\t\tlistOfIndex.push(dataToBeSpliced);\n\t\t}\n\t\tfor(let index of listOfIndex){\n\t\t\tthis.cachedDataSet.splice(index, 1);\n\t\t}\n\t\tconsole.log(this.cachedDataSet);\n\t\t// final: resolve with the id of the removed dataset\n\t\treturn Promise.resolve(id);\n\t}\n\n\tprivate getIndex(id: string): number{\n\t\tlet i = 0;\n\t\tfor(let set of this.data){\n\t\t\tif(set.id !== id){\n\t\t\t\ti++;\n\t\t\t}else{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\treturn i;\n\t}\n\n\tpublic performQuery(query: unknown): Promise<InsightResult[]> {\n\t\t// set the datasetID to empty each time we perform a new query\n\t\tfor (const c of this.data) {\n\t\t\tthis.datasetIds.push(c.id);\n\t\t}\n\t\tlet queryChecker = new QueryChecker(this.datasetIds);\n\t\tif (typeof query !== \"object\" || query === null || query === undefined) {\n\t\t\treturn Promise.reject(new InsightError(\"query is not valid\"));\n\t\t}\n\t\ttry {\n\t\t\tqueryChecker.checkQuery(query);\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t\tlet queryHandler = new QueryHandler(query, this.data, this.cachedDataSet);\n\t\treturn queryHandler.queryHelper();\n\t};\n\n\tpublic listDatasets(): Promise<InsightDataset[]> {\n\t\treturn Promise.resolve(this.data);\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e2c29b12591d1886102ee7efe57fa88c6daef38b","contentHash":"ada1e0c67f70d9020369d2fb0a0cd3381ad2024f4cb8b3421db4a851e3d3f68a"},"/Users/chenpinyue/Documents/cs310/project_team097/src/controller/AddHelper.ts":{"path":"/Users/chenpinyue/Documents/cs310/project_team097/src/controller/AddHelper.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":28},"end":{"line":5,"column":30}},"2":{"start":{"line":6,"column":8},"end":{"line":32,"column":9}},"3":{"start":{"line":7,"column":24},"end":{"line":7,"column":25}},"4":{"start":{"line":8,"column":12},"end":{"line":13,"column":13}},"5":{"start":{"line":9,"column":16},"end":{"line":9,"column":40}},"6":{"start":{"line":12,"column":16},"end":{"line":12,"column":29}},"7":{"start":{"line":14,"column":24},"end":{"line":26,"column":13}},"8":{"start":{"line":27,"column":12},"end":{"line":31,"column":13}},"9":{"start":{"line":28,"column":16},"end":{"line":28,"column":39}},"10":{"start":{"line":29,"column":33},"end":{"line":29,"column":38}},"11":{"start":{"line":30,"column":16},"end":{"line":30,"column":47}},"12":{"start":{"line":33,"column":8},"end":{"line":33,"column":29}},"13":{"start":{"line":36,"column":0},"end":{"line":36,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":56},"end":{"line":34,"column":5}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":12},"end":{"line":13,"column":13}},"type":"if","locations":[{"start":{"line":8,"column":12},"end":{"line":13,"column":13}},{"start":{"line":8,"column":12},"end":{"line":13,"column":13}}],"line":8},"1":{"loc":{"start":{"line":27,"column":12},"end":{"line":31,"column":13}},"type":"if","locations":[{"start":{"line":27,"column":12},"end":{"line":31,"column":13}},{"start":{"line":27,"column":12},"end":{"line":31,"column":13}}],"line":27}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"f":{"0":0},"b":{"0":[0,0],"1":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/chenpinyue/Documents/cs310/project_team097/src/controller/AddHelper.ts","sources":["/Users/chenpinyue/Documents/cs310/project_team097/src/controller/AddHelper.ts"],"names":[],"mappings":";;AAEA,MAAqB,SAAS;IACtB,MAAM,CAAC,gBAAgB,CAAE,UAAiB,EAAE,UAAiB,EAAE,EAAU;QAC/E,IAAI,aAAa,GAAiB,EAAE,CAAC;QACrC,KAAI,IAAI,IAAI,IAAI,UAAU,EAAC;YAC1B,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAG,IAAI,CAAC,SAAS,CAAC,KAAK,SAAS,EAAC;gBAChC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;aACxB;iBAAI;gBACJ,KAAK,GAAG,IAAI,CAAC;aACb;YACD,IAAI,KAAK,GAAG;gBACX,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBACrB,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC;gBAClB,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC;gBAChB,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC;gBAC7B,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC;gBACpB,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC;gBAClB,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC;gBAClB,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC;gBACpB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;gBAChB,IAAI,EAAE,KAAK;gBACX,KAAK,EAAE,EAAE;aACT,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACzC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACvB,IAAI,UAAU,GAAe,KAAK,CAAC;gBACnC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC/B;SACD;QACD,OAAO,aAAa,CAAC;IACtB,CAAC;CACD;AA/BD,4BA+BC","sourcesContent":["import {CachedData} from \"./CachedData\";\n\nexport default class AddHelper{\n\tpublic static dataProcessorAdd (dataResult: any[], listOfData: any[], id: string): CachedData[]{\n\t\tlet cachedDataSet: CachedData[] = [];\n\t\tfor(let data of dataResult){\n\t\t\tlet start = 0;\n\t\t\tif(data[\"Section\"] !== \"overall\"){\n\t\t\t\tstart = data[\"Section\"];\n\t\t\t}else{\n\t\t\t\tstart = 1900;\n\t\t\t}\n\t\t\tlet added = {\n\t\t\t\tdept: data[\"Subject\"],\n\t\t\t\tid: data[\"Course\"],\n\t\t\t\tavg: data[\"Avg\"],\n\t\t\t\tinstructor: data[\"Professor\"],\n\t\t\t\ttitle: data[\"Title\"],\n\t\t\t\tpass: data[\"Pass\"],\n\t\t\t\tfail: data[\"Fail\"],\n\t\t\t\taudit: data[\"Audit\"],\n\t\t\t\tuuid: data[\"id\"],\n\t\t\t\tyear: start,\n\t\t\t\tsetId: id\n\t\t\t};\n\t\t\tif (!Object.values(added).includes(null)) {\n\t\t\t\tlistOfData.push(added);\n\t\t\t\tlet dataCached: CachedData = added;\n\t\t\t\tcachedDataSet.push(dataCached);\n\t\t\t}\n\t\t}\n\t\treturn cachedDataSet;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a57550c10ef12ecec8788dbfc570339204c54ec5","contentHash":"06fb0ac6a81b1c1ff084189253b786fda286287deabfc501372d761f5e6e9330"},"/Users/chenpinyue/Documents/cs310/project_team097/src/controller/QueryChecker.ts":{"path":"/Users/chenpinyue/Documents/cs310/project_team097/src/controller/QueryChecker.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":52}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":23}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":37}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":23}},"7":{"start":{"line":13,"column":8},"end":{"line":35,"column":9}},"8":{"start":{"line":14,"column":24},"end":{"line":14,"column":38}},"9":{"start":{"line":15,"column":26},"end":{"line":15,"column":42}},"10":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"11":{"start":{"line":17,"column":16},"end":{"line":17,"column":78}},"12":{"start":{"line":19,"column":12},"end":{"line":21,"column":13}},"13":{"start":{"line":20,"column":16},"end":{"line":20,"column":78}},"14":{"start":{"line":22,"column":12},"end":{"line":24,"column":13}},"15":{"start":{"line":23,"column":16},"end":{"line":23,"column":78}},"16":{"start":{"line":25,"column":12},"end":{"line":31,"column":13}},"17":{"start":{"line":26,"column":16},"end":{"line":26,"column":40}},"18":{"start":{"line":27,"column":16},"end":{"line":27,"column":44}},"19":{"start":{"line":30,"column":16},"end":{"line":30,"column":78}},"20":{"start":{"line":34,"column":12},"end":{"line":34,"column":69}},"21":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"22":{"start":{"line":40,"column":12},"end":{"line":40,"column":74}},"23":{"start":{"line":42,"column":32},"end":{"line":42,"column":76}},"24":{"start":{"line":43,"column":22},"end":{"line":43,"column":47}},"25":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"26":{"start":{"line":45,"column":12},"end":{"line":45,"column":74}},"27":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"28":{"start":{"line":48,"column":12},"end":{"line":48,"column":59}},"29":{"start":{"line":50,"column":8},"end":{"line":53,"column":9}},"30":{"start":{"line":52,"column":12},"end":{"line":52,"column":55}},"31":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"32":{"start":{"line":55,"column":12},"end":{"line":55,"column":56}},"33":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"34":{"start":{"line":58,"column":12},"end":{"line":58,"column":57}},"35":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"36":{"start":{"line":64,"column":12},"end":{"line":64,"column":39}},"37":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"38":{"start":{"line":69,"column":12},"end":{"line":69,"column":74}},"39":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"40":{"start":{"line":72,"column":12},"end":{"line":72,"column":74}},"41":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"42":{"start":{"line":75,"column":12},"end":{"line":75,"column":74}},"43":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"44":{"start":{"line":80,"column":12},"end":{"line":80,"column":25}},"45":{"start":{"line":82,"column":24},"end":{"line":82,"column":26}},"46":{"start":{"line":83,"column":8},"end":{"line":89,"column":9}},"47":{"start":{"line":84,"column":12},"end":{"line":84,"column":39}},"48":{"start":{"line":85,"column":12},"end":{"line":85,"column":40}},"49":{"start":{"line":86,"column":12},"end":{"line":86,"column":40}},"50":{"start":{"line":87,"column":12},"end":{"line":87,"column":41}},"51":{"start":{"line":88,"column":12},"end":{"line":88,"column":40}},"52":{"start":{"line":90,"column":8},"end":{"line":95,"column":9}},"53":{"start":{"line":91,"column":12},"end":{"line":91,"column":24}},"54":{"start":{"line":94,"column":12},"end":{"line":94,"column":25}},"55":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"56":{"start":{"line":99,"column":12},"end":{"line":99,"column":74}},"57":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"58":{"start":{"line":102,"column":12},"end":{"line":102,"column":74}},"59":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"60":{"start":{"line":105,"column":12},"end":{"line":105,"column":74}},"61":{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},"62":{"start":{"line":110,"column":12},"end":{"line":110,"column":25}},"63":{"start":{"line":113,"column":25},"end":{"line":113,"column":27}},"64":{"start":{"line":114,"column":8},"end":{"line":120,"column":9}},"65":{"start":{"line":115,"column":12},"end":{"line":115,"column":41}},"66":{"start":{"line":116,"column":12},"end":{"line":116,"column":39}},"67":{"start":{"line":117,"column":12},"end":{"line":117,"column":47}},"68":{"start":{"line":118,"column":12},"end":{"line":118,"column":42}},"69":{"start":{"line":119,"column":12},"end":{"line":119,"column":41}},"70":{"start":{"line":121,"column":8},"end":{"line":121,"column":42}},"71":{"start":{"line":124,"column":8},"end":{"line":129,"column":9}},"72":{"start":{"line":125,"column":12},"end":{"line":125,"column":38}},"73":{"start":{"line":128,"column":12},"end":{"line":128,"column":74}},"74":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"75":{"start":{"line":133,"column":12},"end":{"line":133,"column":74}},"76":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"77":{"start":{"line":136,"column":12},"end":{"line":136,"column":74}},"78":{"start":{"line":138,"column":8},"end":{"line":142,"column":9}},"79":{"start":{"line":139,"column":12},"end":{"line":141,"column":13}},"80":{"start":{"line":140,"column":16},"end":{"line":140,"column":78}},"81":{"start":{"line":143,"column":8},"end":{"line":147,"column":9}},"82":{"start":{"line":144,"column":12},"end":{"line":146,"column":13}},"83":{"start":{"line":145,"column":16},"end":{"line":145,"column":78}},"84":{"start":{"line":148,"column":8},"end":{"line":155,"column":9}},"85":{"start":{"line":149,"column":12},"end":{"line":154,"column":13}},"86":{"start":{"line":150,"column":16},"end":{"line":150,"column":60}},"87":{"start":{"line":153,"column":16},"end":{"line":153,"column":78}},"88":{"start":{"line":156,"column":8},"end":{"line":164,"column":9}},"89":{"start":{"line":157,"column":12},"end":{"line":163,"column":13}},"90":{"start":{"line":158,"column":16},"end":{"line":158,"column":60}},"91":{"start":{"line":159,"column":16},"end":{"line":159,"column":71}},"92":{"start":{"line":162,"column":16},"end":{"line":162,"column":78}},"93":{"start":{"line":167,"column":8},"end":{"line":169,"column":9}},"94":{"start":{"line":168,"column":12},"end":{"line":168,"column":68}},"95":{"start":{"line":170,"column":8},"end":{"line":172,"column":9}},"96":{"start":{"line":171,"column":12},"end":{"line":171,"column":74}},"97":{"start":{"line":173,"column":8},"end":{"line":177,"column":9}},"98":{"start":{"line":174,"column":12},"end":{"line":176,"column":13}},"99":{"start":{"line":175,"column":16},"end":{"line":175,"column":82}},"100":{"start":{"line":180,"column":8},"end":{"line":182,"column":9}},"101":{"start":{"line":181,"column":12},"end":{"line":181,"column":25}},"102":{"start":{"line":183,"column":29},"end":{"line":183,"column":31}},"103":{"start":{"line":184,"column":8},"end":{"line":195,"column":9}},"104":{"start":{"line":185,"column":12},"end":{"line":185,"column":44}},"105":{"start":{"line":186,"column":12},"end":{"line":186,"column":45}},"106":{"start":{"line":187,"column":12},"end":{"line":187,"column":45}},"107":{"start":{"line":188,"column":12},"end":{"line":188,"column":46}},"108":{"start":{"line":189,"column":12},"end":{"line":189,"column":45}},"109":{"start":{"line":190,"column":12},"end":{"line":190,"column":45}},"110":{"start":{"line":191,"column":12},"end":{"line":191,"column":43}},"111":{"start":{"line":192,"column":12},"end":{"line":192,"column":51}},"112":{"start":{"line":193,"column":12},"end":{"line":193,"column":46}},"113":{"start":{"line":194,"column":12},"end":{"line":194,"column":45}},"114":{"start":{"line":196,"column":8},"end":{"line":196,"column":50}},"115":{"start":{"line":199,"column":8},"end":{"line":201,"column":9}},"116":{"start":{"line":200,"column":12},"end":{"line":200,"column":25}},"117":{"start":{"line":202,"column":8},"end":{"line":204,"column":9}},"118":{"start":{"line":203,"column":12},"end":{"line":203,"column":72}},"119":{"start":{"line":205,"column":8},"end":{"line":207,"column":9}},"120":{"start":{"line":206,"column":12},"end":{"line":206,"column":80}},"121":{"start":{"line":210,"column":8},"end":{"line":215,"column":9}},"122":{"start":{"line":211,"column":12},"end":{"line":211,"column":25}},"123":{"start":{"line":214,"column":12},"end":{"line":214,"column":24}},"124":{"start":{"line":218,"column":0},"end":{"line":218,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":28},"end":{"line":10,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":22},"end":{"line":36,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":27},"end":{"line":60,"column":5}},"line":38},"3":{"name":"(anonymous_3)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":37},"end":{"line":66,"column":5}},"line":62},"4":{"name":"(anonymous_4)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":29},"end":{"line":77,"column":5}},"line":67},"5":{"name":"(anonymous_5)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":20},"end":{"line":96,"column":5}},"line":78},"6":{"name":"(anonymous_6)","decl":{"start":{"line":97,"column":4},"end":{"line":97,"column":5}},"loc":{"start":{"line":97,"column":31},"end":{"line":107,"column":5}},"line":97},"7":{"name":"(anonymous_7)","decl":{"start":{"line":108,"column":4},"end":{"line":108,"column":5}},"loc":{"start":{"line":108,"column":22},"end":{"line":122,"column":5}},"line":108},"8":{"name":"(anonymous_8)","decl":{"start":{"line":123,"column":4},"end":{"line":123,"column":5}},"loc":{"start":{"line":123,"column":33},"end":{"line":130,"column":5}},"line":123},"9":{"name":"(anonymous_9)","decl":{"start":{"line":131,"column":4},"end":{"line":131,"column":5}},"loc":{"start":{"line":131,"column":30},"end":{"line":165,"column":5}},"line":131},"10":{"name":"(anonymous_10)","decl":{"start":{"line":166,"column":4},"end":{"line":166,"column":5}},"loc":{"start":{"line":166,"column":32},"end":{"line":178,"column":5}},"line":166},"11":{"name":"(anonymous_11)","decl":{"start":{"line":179,"column":4},"end":{"line":179,"column":5}},"loc":{"start":{"line":179,"column":30},"end":{"line":197,"column":5}},"line":179},"12":{"name":"(anonymous_12)","decl":{"start":{"line":198,"column":4},"end":{"line":198,"column":5}},"loc":{"start":{"line":198,"column":32},"end":{"line":208,"column":5}},"line":198},"13":{"name":"(anonymous_13)","decl":{"start":{"line":209,"column":4},"end":{"line":209,"column":5}},"loc":{"start":{"line":209,"column":20},"end":{"line":216,"column":5}},"line":209}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":8},"end":{"line":35,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":35,"column":9}},{"start":{"line":13,"column":8},"end":{"line":35,"column":9}}],"line":13},"1":{"loc":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"type":"if","locations":[{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},{"start":{"line":16,"column":12},"end":{"line":18,"column":13}}],"line":16},"2":{"loc":{"start":{"line":19,"column":12},"end":{"line":21,"column":13}},"type":"if","locations":[{"start":{"line":19,"column":12},"end":{"line":21,"column":13}},{"start":{"line":19,"column":12},"end":{"line":21,"column":13}}],"line":19},"3":{"loc":{"start":{"line":22,"column":12},"end":{"line":24,"column":13}},"type":"if","locations":[{"start":{"line":22,"column":12},"end":{"line":24,"column":13}},{"start":{"line":22,"column":12},"end":{"line":24,"column":13}}],"line":22},"4":{"loc":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},{"start":{"line":39,"column":8},"end":{"line":41,"column":9}}],"line":39},"5":{"loc":{"start":{"line":39,"column":12},"end":{"line":39,"column":80}},"type":"binary-expr","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":47}},{"start":{"line":39,"column":51},"end":{"line":39,"column":80}}],"line":39},"6":{"loc":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},{"start":{"line":44,"column":8},"end":{"line":46,"column":9}}],"line":44},"7":{"loc":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},{"start":{"line":47,"column":8},"end":{"line":49,"column":9}}],"line":47},"8":{"loc":{"start":{"line":47,"column":12},"end":{"line":47,"column":85}},"type":"binary-expr","locations":[{"start":{"line":47,"column":12},"end":{"line":47,"column":47}},{"start":{"line":47,"column":51},"end":{"line":47,"column":85}}],"line":47},"9":{"loc":{"start":{"line":50,"column":8},"end":{"line":53,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":53,"column":9}},{"start":{"line":50,"column":8},"end":{"line":53,"column":9}}],"line":50},"10":{"loc":{"start":{"line":50,"column":12},"end":{"line":51,"column":49}},"type":"binary-expr","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":46}},{"start":{"line":50,"column":50},"end":{"line":50,"column":84}},{"start":{"line":51,"column":15},"end":{"line":51,"column":49}}],"line":50},"11":{"loc":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},{"start":{"line":54,"column":8},"end":{"line":56,"column":9}}],"line":54},"12":{"loc":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},{"start":{"line":57,"column":8},"end":{"line":59,"column":9}}],"line":57},"13":{"loc":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},{"start":{"line":68,"column":8},"end":{"line":70,"column":9}}],"line":68},"14":{"loc":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},{"start":{"line":71,"column":8},"end":{"line":73,"column":9}}],"line":71},"15":{"loc":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},{"start":{"line":74,"column":8},"end":{"line":76,"column":9}}],"line":74},"16":{"loc":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},{"start":{"line":79,"column":8},"end":{"line":81,"column":9}}],"line":79},"17":{"loc":{"start":{"line":90,"column":8},"end":{"line":95,"column":9}},"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":95,"column":9}},{"start":{"line":90,"column":8},"end":{"line":95,"column":9}}],"line":90},"18":{"loc":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},{"start":{"line":98,"column":8},"end":{"line":100,"column":9}}],"line":98},"19":{"loc":{"start":{"line":98,"column":12},"end":{"line":98,"column":81}},"type":"binary-expr","locations":[{"start":{"line":98,"column":12},"end":{"line":98,"column":38}},{"start":{"line":98,"column":42},"end":{"line":98,"column":57}},{"start":{"line":98,"column":61},"end":{"line":98,"column":81}}],"line":98},"20":{"loc":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},{"start":{"line":101,"column":8},"end":{"line":103,"column":9}}],"line":101},"21":{"loc":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},{"start":{"line":104,"column":8},"end":{"line":106,"column":9}}],"line":104},"22":{"loc":{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},"type":"if","locations":[{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},{"start":{"line":109,"column":8},"end":{"line":111,"column":9}}],"line":109},"23":{"loc":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},{"start":{"line":132,"column":8},"end":{"line":134,"column":9}}],"line":132},"24":{"loc":{"start":{"line":132,"column":12},"end":{"line":132,"column":93}},"type":"binary-expr","locations":[{"start":{"line":132,"column":12},"end":{"line":132,"column":42}},{"start":{"line":132,"column":46},"end":{"line":132,"column":65}},{"start":{"line":132,"column":69},"end":{"line":132,"column":93}}],"line":132},"25":{"loc":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},{"start":{"line":135,"column":8},"end":{"line":137,"column":9}}],"line":135},"26":{"loc":{"start":{"line":135,"column":12},"end":{"line":135,"column":88}},"type":"binary-expr","locations":[{"start":{"line":135,"column":12},"end":{"line":135,"column":48}},{"start":{"line":135,"column":52},"end":{"line":135,"column":88}}],"line":135},"27":{"loc":{"start":{"line":138,"column":8},"end":{"line":142,"column":9}},"type":"if","locations":[{"start":{"line":138,"column":8},"end":{"line":142,"column":9}},{"start":{"line":138,"column":8},"end":{"line":142,"column":9}}],"line":138},"28":{"loc":{"start":{"line":138,"column":12},"end":{"line":138,"column":88}},"type":"binary-expr","locations":[{"start":{"line":138,"column":12},"end":{"line":138,"column":48}},{"start":{"line":138,"column":52},"end":{"line":138,"column":88}}],"line":138},"29":{"loc":{"start":{"line":139,"column":12},"end":{"line":141,"column":13}},"type":"if","locations":[{"start":{"line":139,"column":12},"end":{"line":141,"column":13}},{"start":{"line":139,"column":12},"end":{"line":141,"column":13}}],"line":139},"30":{"loc":{"start":{"line":143,"column":8},"end":{"line":147,"column":9}},"type":"if","locations":[{"start":{"line":143,"column":8},"end":{"line":147,"column":9}},{"start":{"line":143,"column":8},"end":{"line":147,"column":9}}],"line":143},"31":{"loc":{"start":{"line":144,"column":12},"end":{"line":146,"column":13}},"type":"if","locations":[{"start":{"line":144,"column":12},"end":{"line":146,"column":13}},{"start":{"line":144,"column":12},"end":{"line":146,"column":13}}],"line":144},"32":{"loc":{"start":{"line":144,"column":16},"end":{"line":144,"column":98}},"type":"binary-expr","locations":[{"start":{"line":144,"column":16},"end":{"line":144,"column":56}},{"start":{"line":144,"column":60},"end":{"line":144,"column":98}}],"line":144},"33":{"loc":{"start":{"line":148,"column":8},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":155,"column":9}},{"start":{"line":148,"column":8},"end":{"line":155,"column":9}}],"line":148},"34":{"loc":{"start":{"line":156,"column":8},"end":{"line":164,"column":9}},"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":164,"column":9}},{"start":{"line":156,"column":8},"end":{"line":164,"column":9}}],"line":156},"35":{"loc":{"start":{"line":167,"column":8},"end":{"line":169,"column":9}},"type":"if","locations":[{"start":{"line":167,"column":8},"end":{"line":169,"column":9}},{"start":{"line":167,"column":8},"end":{"line":169,"column":9}}],"line":167},"36":{"loc":{"start":{"line":170,"column":8},"end":{"line":172,"column":9}},"type":"if","locations":[{"start":{"line":170,"column":8},"end":{"line":172,"column":9}},{"start":{"line":170,"column":8},"end":{"line":172,"column":9}}],"line":170},"37":{"loc":{"start":{"line":174,"column":12},"end":{"line":176,"column":13}},"type":"if","locations":[{"start":{"line":174,"column":12},"end":{"line":176,"column":13}},{"start":{"line":174,"column":12},"end":{"line":176,"column":13}}],"line":174},"38":{"loc":{"start":{"line":180,"column":8},"end":{"line":182,"column":9}},"type":"if","locations":[{"start":{"line":180,"column":8},"end":{"line":182,"column":9}},{"start":{"line":180,"column":8},"end":{"line":182,"column":9}}],"line":180},"39":{"loc":{"start":{"line":199,"column":8},"end":{"line":201,"column":9}},"type":"if","locations":[{"start":{"line":199,"column":8},"end":{"line":201,"column":9}},{"start":{"line":199,"column":8},"end":{"line":201,"column":9}}],"line":199},"40":{"loc":{"start":{"line":202,"column":8},"end":{"line":204,"column":9}},"type":"if","locations":[{"start":{"line":202,"column":8},"end":{"line":204,"column":9}},{"start":{"line":202,"column":8},"end":{"line":204,"column":9}}],"line":202},"41":{"loc":{"start":{"line":205,"column":8},"end":{"line":207,"column":9}},"type":"if","locations":[{"start":{"line":205,"column":8},"end":{"line":207,"column":9}},{"start":{"line":205,"column":8},"end":{"line":207,"column":9}}],"line":205},"42":{"loc":{"start":{"line":210,"column":8},"end":{"line":215,"column":9}},"type":"if","locations":[{"start":{"line":210,"column":8},"end":{"line":215,"column":9}},{"start":{"line":210,"column":8},"end":{"line":215,"column":9}}],"line":210},"43":{"loc":{"start":{"line":210,"column":12},"end":{"line":210,"column":78}},"type":"binary-expr","locations":[{"start":{"line":210,"column":12},"end":{"line":210,"column":37}},{"start":{"line":210,"column":41},"end":{"line":210,"column":55}},{"start":{"line":210,"column":59},"end":{"line":210,"column":78}}],"line":210}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0,0]},"inputSourceMap":{"version":3,"file":"/Users/chenpinyue/Documents/cs310/project_team097/src/controller/QueryChecker.ts","sources":["/Users/chenpinyue/Documents/cs310/project_team097/src/controller/QueryChecker.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightDataset, InsightError} from \"./IInsightFacade\";\n\nexport class QueryChecker {\n\n\tprivate datasetIDs;\n\tprivate data: InsightDataset[];\n\tprivate id: any = null;\n\n\n\tconstructor(datasetIDs: any[]) {\n\t\tthis.datasetIDs = datasetIDs;\n\t\tthis.data = [];\n\t}\n\n\n\tpublic checkQuery(query: unknown){\n\t\t// const validQueryArguments = ['WHERE',\"OPTIONS\"];\n\t\tthis.id = null;\n\t\tif (this.isRecord(query)) {\n\t\t\tlet where = query[\"WHERE\"];\n\t\t\tlet options = query[\"OPTIONS\"];\n\t\t\tif(Object.keys(query).length !== 2) {\n\t\t\t\tthrow new InsightError(\"query is not valid\");\n\t\t\t}\n\t\t\tif(!Object.keys(query).includes(\"WHERE\")) {\n\t\t\t\tthrow new InsightError(\"query is not valid\");\n\t\t\t}\n\t\t\tif (!Object.keys(query).includes(\"OPTIONS\")) {\n\t\t\t\tthrow new InsightError(\"query is not valid\");\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tthis.handleWHERE(where);\n\t\t\t\tthis.handleOptions(options);\n\t\t\t} catch (e) {\n\t\t\t\tthrow new InsightError(\"query is not valid\");\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new InsightError(\"invalid query\");\n\t\t}\n\t};\n\n\tprivate handleWHERE(wherePart: any){\n\n\t\tif (Object.keys(wherePart).length !== 1 && typeof wherePart !== \"object\") {\n\t\t\tthrow new InsightError(\"query is not valid\");\n\t\t}\n\t\tconst filterArguments = [\"IS\",\"NOT\",\"AND\",\"OR\",\"LT\",\"GT\",\"EQ\"];\n\t\tlet keyName = Object.keys(wherePart)[0];\n\t\tif (!filterArguments.includes(keyName)) {\n\t\t\tthrow new InsightError(\"query is not valid\");\n\t\t}\n\t\tif (Object.keys(wherePart)[0] === \"AND\" || Object.keys(wherePart)[0] === \"OR\") {\n\t\t\tthis.handleLogicComparison(wherePart[keyName]);\n\t\t}\n\n\t\tif (Object.keys(wherePart)[0] === \"GT\" || Object.keys(wherePart)[0] === \"LT\"\n\t\t\t|| Object.keys(wherePart)[0] === \"EQ\") {\n\t\t\tthis.handleMComparison(wherePart[keyName]);\n\t\t}\n\n\t\tif (Object.keys(wherePart)[0] === \"IS\") {\n\t\t\tthis.handleISComparison(wherePart[keyName]);\n\t\t}\n\n\t\tif (Object.keys(wherePart)[0] === \"NOT\") {\n\t\t\tthis.handleNotComparison(wherePart[keyName]);\n\t\t}\n\t};\n\n\tprivate handleLogicComparison(logicPart: any){\n\t\t// if (logicPart.Object.keys(logicPart[0]).length !== 1 || logicPart.Object.keys(logicPart[0]).length !== 2){\n\t\t// \tthrow new InsightError(\"query is not valid\");\n\t\t// }\n\t\tfor (let elements of logicPart) {\n\t\t\tthis.handleWHERE(elements);\n\t\t}\n\t}\n\n\tprivate handleMComparison(mPart: any) {\n\t\tif (typeof mPart !== \"object\") {\n\t\t\tthrow new InsightError(\"query is not valid\");\n\t\t}\n\t\tif (Object.keys(mPart).length !== 1) {\n\t\t\tthrow new InsightError(\"query is not valid\");\n\t\t}\n\t\tif (!this.checkMkey(Object.keys(mPart)[0])) {\n\t\t\tthrow new InsightError(\"query is not valid\");\n\t\t}\n\t}\n\n\tprivate checkMkey(mKey: string): boolean{\n\t\tif (!mKey.includes(\"_\")) {\n\t\t\treturn false;\n\t\t}\n\t\tlet mKeyArray = [];\n\t\tfor (const c of this.datasetIDs) {\n\t\t\tmKeyArray.push(c + \"_avg\");\n\t\t\tmKeyArray.push(c + \"_pass\");\n\t\t\tmKeyArray.push(c + \"_fail\");\n\t\t\tmKeyArray.push(c + \"_audit\");\n\t\t\tmKeyArray.push(c + \"_year\");\n\t\t}\n\t\tif (mKeyArray.includes(mKey)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate handleISComparison(isPart: any) {\n\t\t// if (this.id === null) {\n\t\t// \tthis.id = Object.keys(isPart)[0].split(\"_\")[0];\n\t\t// } else {\n\t\t// \tif (this.id !== Object.keys(isPart)[0].split(\"_\")[0]) {\n\t\t// \t\tthrow new InsightError(\"query is not valid\");\n\t\t// \t}\n\t\t// }\n\t\tif (typeof isPart !== \"object\" && isPart !== null && isPart !== undefined) {\n\t\t\tthrow new InsightError(\"query is not valid\");\n\t\t}\n\n\t\tif (Object.keys(isPart).length !== 1) {\n\t\t\tthrow new InsightError(\"query is not valid\");\n\t\t}\n\n\t\tif (!this.checkIskey(Object.keys(isPart)[0])) {\n\t\t\tthrow new InsightError(\"query is not valid\");\n\t\t}\n\n\t}\n\n\tprivate checkIskey(isKey: string) {\n\t\tif (!isKey.includes(\"_\")) {\n\t\t\treturn false;\n\t\t};\n\n\t\tlet isKeyArray = [];\n\t\tfor (const c of this.datasetIDs) {\n\t\t\tisKeyArray.push(c + \"_dept\");\n\t\t\tisKeyArray.push(c + \"_id\");\n\t\t\tisKeyArray.push(c + \"_instructor\");\n\t\t\tisKeyArray.push(c + \"_title\");\n\t\t\tisKeyArray.push(c + \"_uuid\");\n\t\t}\n\t\treturn isKeyArray.includes(isKey);\n\t}\n\n\tprivate handleNotComparison(notPart: any) {\n\t\ttry {\n\t\t\tthis.handleWHERE(notPart);\n\t\t} catch (e) {\n\t\t\tthrow new InsightError(\"query is not valid\");\n\t\t}\n\t}\n\n\n\tprivate handleOptions(optionPart: any) {\n\t\tif (typeof optionPart !== \"object\" && optionPart !== null && optionPart !== undefined) {\n\t\t\tthrow new InsightError(\"query is not valid\");\n\t\t}\n\n\t\tif (Object.keys(optionPart).length !== 2 && Object.keys(optionPart).length !== 1) {\n\t\t\tthrow new InsightError(\"query is not valid\");\n\t\t}\n\n\t\tif (Object.keys(optionPart).length === 1 || Object.keys(optionPart).length === 2) {\n\t\t\tif (Object.keys(optionPart)[0] !== \"COLUMNS\") {\n\t\t\t\tthrow new InsightError(\"query is not valid\");\n\t\t\t}\n\t\t}\n\t\tif(Object.keys(optionPart).length === 2) {\n\t\t\tif (Object.keys(optionPart)[0] !== \"COLUMNS\" && Object.keys(optionPart)[1] !== \"ORDER\") {\n\t\t\t\tthrow new InsightError(\"query is not valid\");\n\t\t\t}\n\t\t}\n\n\t\tif (Object.keys(optionPart).length === 1) {\n\t\t\ttry {\n\t\t\t\tthis.handleColumnHelper(optionPart.COLUMNS);\n\t\t\t} catch (e) {\n\t\t\t\tthrow new InsightError(\"query is not valid\");\n\t\t\t}\n\t\t}\n\n\t\tif (Object.keys(optionPart).length === 2) {\n\t\t\ttry {\n\t\t\t\tthis.handleColumnHelper(optionPart.COLUMNS);\n\t\t\t\tthis.handleOrder(optionPart.ORDER,optionPart.COLUMNS);\n\t\t\t} catch (e) {\n\t\t\t\tthrow new InsightError(\"query is not valid\");\n\t\t\t}\n\t\t}\n\n\n\t}\n\n\tprivate handleColumnHelper(COLUMNS: any) {\n\t\t// if (this.id === null) {\n\t\t// \tthis.id = COLUMNS[0].split(\"_\")[0];\n\t\t// } else {\n\t\t// \tif (this.id !== COLUMNS.split(\"_\")[0]) {\n\t\t// \t\tthrow new InsightError(\"query is not valid\");\n\t\t// \t}\n\t\t// }\n\t\tif (COLUMNS.length === 0) {\n\t\t\tthrow new InsightError(\"Column empty\");\n\t\t}\n\t\tif (!(COLUMNS instanceof Array)) {\n\t\t\tthrow new InsightError(\"Column type wrong!\");\n\t\t}\n\t\tfor (const obj of COLUMNS) {\n\t\t\tif (!this.checkColumnKey(obj)) {\n\t\t\t\tthrow new InsightError(\"Column content invalid\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate checkColumnKey(columnKey: string): boolean{\n\t\tif (!columnKey.includes(\"_\")) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet columnKeyArray = [];\n\t\tfor (const c of this.datasetIDs) {\n\t\t\tcolumnKeyArray.push(c + \"_avg\");\n\t\t\tcolumnKeyArray.push(c + \"_pass\");\n\t\t\tcolumnKeyArray.push(c + \"_fail\");\n\t\t\tcolumnKeyArray.push(c + \"_audit\");\n\t\t\tcolumnKeyArray.push(c + \"_year\");\n\t\t\tcolumnKeyArray.push(c + \"_dept\");\n\t\t\tcolumnKeyArray.push(c + \"_id\");\n\t\t\tcolumnKeyArray.push(c + \"_instructor\");\n\t\t\tcolumnKeyArray.push(c + \"_title\");\n\t\t\tcolumnKeyArray.push(c + \"_uuid\");\n\t\t}\n\t\treturn columnKeyArray.includes(columnKey);\n\t}\n\n\n\tprivate handleOrder(Order: any,Columns: any) {\n\t\t// if (this.id === null) {\n\t\t// \tthis.id = Order.split(\"_\")[0];\n\t\t// } else {\n\t\t// \tif (this.id !== Order.split(\"_\")[0]) {\n\t\t// \t\tthrow new InsightError(\"query is not valid\");\n\t\t// \t}\n\t\t// }\n\t\tif (!Order.includes(\"_\")) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof Order !== \"string\") {\n\t\t\tthrow new InsightError(\"Order type wrong\");\n\t\t}\n\t\tif (!Columns.includes(Order)) {\n\t\t\tthrow new InsightError(\"Order key not in columns\");\n\t\t}\n\t}\n\tpublic isRecord(query: unknown): query is Record<string,unknown> {\n\t\tif (typeof query !== \"object\" && query !== null && query !== undefined) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ff5951e0cfa440506aa7d88242adf49c10aa6835","contentHash":"0bcb44796bb1a3d22bc21e590b06a0e88ea3db12059db879cd177a1bf3dc4a58"},"/Users/chenpinyue/Documents/cs310/project_team097/src/controller/QueryHandler.ts":{"path":"/Users/chenpinyue/Documents/cs310/project_team097/src/controller/QueryHandler.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":52}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":27}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":36}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":45}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":35}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":27}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":26}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":24}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":51}},"11":{"start":{"line":17,"column":21},"end":{"line":17,"column":23}},"12":{"start":{"line":18,"column":8},"end":{"line":33,"column":9}},"13":{"start":{"line":19,"column":22},"end":{"line":31,"column":13}},"14":{"start":{"line":32,"column":12},"end":{"line":32,"column":29}},"15":{"start":{"line":34,"column":8},"end":{"line":34,"column":22}},"16":{"start":{"line":37,"column":8},"end":{"line":48,"column":9}},"17":{"start":{"line":38,"column":29},"end":{"line":38,"column":47}},"18":{"start":{"line":39,"column":28},"end":{"line":39,"column":44}},"19":{"start":{"line":40,"column":12},"end":{"line":40,"column":43}},"20":{"start":{"line":41,"column":12},"end":{"line":41,"column":59}},"21":{"start":{"line":42,"column":12},"end":{"line":42,"column":51}},"22":{"start":{"line":43,"column":12},"end":{"line":43,"column":56}},"23":{"start":{"line":44,"column":12},"end":{"line":44,"column":49}},"24":{"start":{"line":47,"column":12},"end":{"line":47,"column":37}},"25":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"26":{"start":{"line":50,"column":12},"end":{"line":50,"column":111}},"27":{"start":{"line":52,"column":8},"end":{"line":52,"column":48}},"28":{"start":{"line":55,"column":25},"end":{"line":55,"column":46}},"29":{"start":{"line":56,"column":8},"end":{"line":56,"column":26}},"30":{"start":{"line":57,"column":8},"end":{"line":60,"column":9}},"31":{"start":{"line":58,"column":25},"end":{"line":58,"column":43}},"32":{"start":{"line":59,"column":12},"end":{"line":59,"column":38}},"33":{"start":{"line":63,"column":22},"end":{"line":63,"column":24}},"34":{"start":{"line":64,"column":8},"end":{"line":72,"column":9}},"35":{"start":{"line":65,"column":12},"end":{"line":65,"column":40}},"36":{"start":{"line":67,"column":13},"end":{"line":72,"column":9}},"37":{"start":{"line":68,"column":12},"end":{"line":68,"column":105}},"38":{"start":{"line":71,"column":12},"end":{"line":71,"column":49}},"39":{"start":{"line":73,"column":8},"end":{"line":73,"column":23}},"40":{"start":{"line":76,"column":8},"end":{"line":76,"column":18}},"41":{"start":{"line":79,"column":8},"end":{"line":79,"column":18}},"42":{"start":{"line":82,"column":21},"end":{"line":82,"column":46}},"43":{"start":{"line":83,"column":8},"end":{"line":94,"column":9}},"44":{"start":{"line":84,"column":12},"end":{"line":84,"column":48}},"45":{"start":{"line":86,"column":13},"end":{"line":94,"column":9}},"46":{"start":{"line":87,"column":12},"end":{"line":87,"column":48}},"47":{"start":{"line":89,"column":13},"end":{"line":94,"column":9}},"48":{"start":{"line":90,"column":12},"end":{"line":90,"column":48}},"49":{"start":{"line":93,"column":12},"end":{"line":93,"column":48}},"50":{"start":{"line":97,"column":28},"end":{"line":97,"column":30}},"51":{"start":{"line":98,"column":8},"end":{"line":102,"column":9}},"52":{"start":{"line":99,"column":12},"end":{"line":101,"column":13}},"53":{"start":{"line":100,"column":16},"end":{"line":100,"column":38}},"54":{"start":{"line":103,"column":8},"end":{"line":103,"column":29}},"55":{"start":{"line":106,"column":28},"end":{"line":106,"column":30}},"56":{"start":{"line":107,"column":8},"end":{"line":111,"column":9}},"57":{"start":{"line":108,"column":12},"end":{"line":110,"column":13}},"58":{"start":{"line":109,"column":16},"end":{"line":109,"column":38}},"59":{"start":{"line":112,"column":8},"end":{"line":112,"column":29}},"60":{"start":{"line":115,"column":28},"end":{"line":115,"column":30}},"61":{"start":{"line":116,"column":8},"end":{"line":120,"column":9}},"62":{"start":{"line":117,"column":12},"end":{"line":119,"column":13}},"63":{"start":{"line":118,"column":16},"end":{"line":118,"column":38}},"64":{"start":{"line":121,"column":8},"end":{"line":121,"column":29}},"65":{"start":{"line":124,"column":8},"end":{"line":124,"column":18}},"66":{"start":{"line":127,"column":29},"end":{"line":127,"column":31}},"67":{"start":{"line":128,"column":8},"end":{"line":134,"column":9}},"68":{"start":{"line":129,"column":32},"end":{"line":129,"column":34}},"69":{"start":{"line":130,"column":12},"end":{"line":132,"column":13}},"70":{"start":{"line":131,"column":16},"end":{"line":131,"column":74}},"71":{"start":{"line":133,"column":12},"end":{"line":133,"column":47}},"72":{"start":{"line":135,"column":8},"end":{"line":135,"column":30}},"73":{"start":{"line":138,"column":27},"end":{"line":138,"column":42}},"74":{"start":{"line":139,"column":23},"end":{"line":139,"column":47}},"75":{"start":{"line":140,"column":8},"end":{"line":150,"column":11}},"76":{"start":{"line":141,"column":12},"end":{"line":149,"column":13}},"77":{"start":{"line":142,"column":16},"end":{"line":142,"column":25}},"78":{"start":{"line":144,"column":17},"end":{"line":149,"column":13}},"79":{"start":{"line":145,"column":16},"end":{"line":145,"column":26}},"80":{"start":{"line":148,"column":16},"end":{"line":148,"column":25}},"81":{"start":{"line":153,"column":0},"end":{"line":153,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":40},"end":{"line":15,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":24},"end":{"line":35,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":18},"end":{"line":53,"column":5}},"line":36},"3":{"name":"(anonymous_3)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":30},"end":{"line":61,"column":5}},"line":54},"4":{"name":"(anonymous_4)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":28},"end":{"line":74,"column":5}},"line":62},"5":{"name":"(anonymous_5)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":17},"end":{"line":77,"column":5}},"line":75},"6":{"name":"(anonymous_6)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":30},"end":{"line":80,"column":5}},"line":78},"7":{"name":"(anonymous_7)","decl":{"start":{"line":81,"column":4},"end":{"line":81,"column":5}},"loc":{"start":{"line":81,"column":26},"end":{"line":95,"column":5}},"line":81},"8":{"name":"(anonymous_8)","decl":{"start":{"line":96,"column":4},"end":{"line":96,"column":5}},"loc":{"start":{"line":96,"column":22},"end":{"line":104,"column":5}},"line":96},"9":{"name":"(anonymous_9)","decl":{"start":{"line":105,"column":4},"end":{"line":105,"column":5}},"loc":{"start":{"line":105,"column":22},"end":{"line":113,"column":5}},"line":105},"10":{"name":"(anonymous_10)","decl":{"start":{"line":114,"column":4},"end":{"line":114,"column":5}},"loc":{"start":{"line":114,"column":22},"end":{"line":122,"column":5}},"line":114},"11":{"name":"(anonymous_11)","decl":{"start":{"line":123,"column":4},"end":{"line":123,"column":5}},"loc":{"start":{"line":123,"column":22},"end":{"line":125,"column":5}},"line":123},"12":{"name":"(anonymous_12)","decl":{"start":{"line":126,"column":4},"end":{"line":126,"column":5}},"loc":{"start":{"line":126,"column":20},"end":{"line":136,"column":5}},"line":126},"13":{"name":"(anonymous_13)","decl":{"start":{"line":137,"column":4},"end":{"line":137,"column":5}},"loc":{"start":{"line":137,"column":18},"end":{"line":151,"column":5}},"line":137},"14":{"name":"(anonymous_14)","decl":{"start":{"line":140,"column":33},"end":{"line":140,"column":34}},"loc":{"start":{"line":140,"column":49},"end":{"line":150,"column":9}},"line":140}},"branchMap":{"0":{"loc":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},{"start":{"line":49,"column":8},"end":{"line":51,"column":9}}],"line":49},"1":{"loc":{"start":{"line":64,"column":8},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":72,"column":9}},{"start":{"line":64,"column":8},"end":{"line":72,"column":9}}],"line":64},"2":{"loc":{"start":{"line":67,"column":13},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":67,"column":13},"end":{"line":72,"column":9}},{"start":{"line":67,"column":13},"end":{"line":72,"column":9}}],"line":67},"3":{"loc":{"start":{"line":67,"column":17},"end":{"line":67,"column":90}},"type":"binary-expr","locations":[{"start":{"line":67,"column":17},"end":{"line":67,"column":52}},{"start":{"line":67,"column":56},"end":{"line":67,"column":90}}],"line":67},"4":{"loc":{"start":{"line":83,"column":8},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":94,"column":9}},{"start":{"line":83,"column":8},"end":{"line":94,"column":9}}],"line":83},"5":{"loc":{"start":{"line":86,"column":13},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":13},"end":{"line":94,"column":9}},{"start":{"line":86,"column":13},"end":{"line":94,"column":9}}],"line":86},"6":{"loc":{"start":{"line":89,"column":13},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":13},"end":{"line":94,"column":9}},{"start":{"line":89,"column":13},"end":{"line":94,"column":9}}],"line":89},"7":{"loc":{"start":{"line":99,"column":12},"end":{"line":101,"column":13}},"type":"if","locations":[{"start":{"line":99,"column":12},"end":{"line":101,"column":13}},{"start":{"line":99,"column":12},"end":{"line":101,"column":13}}],"line":99},"8":{"loc":{"start":{"line":108,"column":12},"end":{"line":110,"column":13}},"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":110,"column":13}},{"start":{"line":108,"column":12},"end":{"line":110,"column":13}}],"line":108},"9":{"loc":{"start":{"line":117,"column":12},"end":{"line":119,"column":13}},"type":"if","locations":[{"start":{"line":117,"column":12},"end":{"line":119,"column":13}},{"start":{"line":117,"column":12},"end":{"line":119,"column":13}}],"line":117},"10":{"loc":{"start":{"line":141,"column":12},"end":{"line":149,"column":13}},"type":"if","locations":[{"start":{"line":141,"column":12},"end":{"line":149,"column":13}},{"start":{"line":141,"column":12},"end":{"line":149,"column":13}}],"line":141},"11":{"loc":{"start":{"line":144,"column":17},"end":{"line":149,"column":13}},"type":"if","locations":[{"start":{"line":144,"column":17},"end":{"line":149,"column":13}},{"start":{"line":144,"column":17},"end":{"line":149,"column":13}}],"line":144}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/chenpinyue/Documents/cs310/project_team097/src/controller/QueryHandler.ts","sources":["/Users/chenpinyue/Documents/cs310/project_team097/src/controller/QueryHandler.ts"],"names":[],"mappings":";;;AAAA,qDAAkG;AAIlG,MAAa,YAAY;IAUxB,YAAY,KAAU,EAAE,SAA2B,EAAE,IAAkB;QAEtE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IAGO,aAAa,CAAC,IAAkB;QACvC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,KAAI,MAAM,MAAM,IAAI,IAAI,EAAC;YACxB,IAAI,GAAG,GAAkB;gBACxB,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,EAAE,EAAE,MAAM,CAAC,EAAE;gBACb,GAAG,EAAE,MAAM,CAAC,GAAG;gBACf,UAAU,EAAE,MAAM,CAAC,UAAU;gBAC7B,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,KAAK,EAAE,MAAM,CAAC,KAAK;aACnB,CAAC;YACF,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACjB;QACD,OAAO,MAAM,CAAC;IACf,CAAC;IAEM,WAAW;QACjB,IAAI;YACH,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YACpC,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YAEjC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YAE/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YAE/C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YAEvC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC;YAC5C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;SACrC;QAAC,OAAO,CAAC,EAAE;YACX,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACzB;QACD,IAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,EAAC;YAC1B,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,oCAAmB,CAAC,iCAAiC,CAAC,CAAC,CAAC;SAClF;QACD,OAAQ,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC;IAGM,aAAa,CAAC,UAAe;QACnC,IAAI,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,KAAK,MAAM,CAAC,IAAI,UAAU,EAAE;YAC3B,IAAI,MAAM,GAAW,CAAC,CAAC,KAAK,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC1B;IACF,CAAC;IACM,YAAY,CAAC,SAAc;QACjC,IAAI,OAAO,GAAoB,EAAE,CAAC;QAClC,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;YACxC,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;SAC5B;aAAK,IAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAC;YAClF,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7F;aAAI;YACJ,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;SACrC;QACD,OAAO,OAAO,CAAC;IAChB,CAAC;IAGO,UAAU;QACjB,OAAO,EAAE,CAAC;IACX,CAAC;IAEO,YAAY,CAAC,GAAU,EAAE,MAAc;QAC9C,OAAO,EAAE,CAAC;IACX,CAAC;IAEO,UAAU,CAAC,SAAc;QAChC,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,IAAG,MAAM,KAAK,IAAI,EAAC;YAClB,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;SACpC;aAAK,IAAG,MAAM,KAAK,IAAI,EAAC;YACxB,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;SACpC;aAAK,IAAG,MAAM,KAAK,IAAI,EAAC;YACxB,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;SACpC;aAAI;YACJ,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;SACpC;IACF,CAAC;IAEO,SAAS,CAAC,MAAW;QAC5B,IAAI,aAAa,GAAoB,EAAE,CAAC;QACxC,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;YAC1B,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC1D,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACtB;SACD;QACD,OAAO,aAAa,CAAC;IACtB,CAAC;IAEO,SAAS,CAAC,MAAW;QAC5B,IAAI,aAAa,GAAoB,EAAE,CAAC;QACxC,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;YAC1B,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC5D,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACtB;SACD;QACD,OAAO,aAAa,CAAC;IACtB,CAAC;IAEO,SAAS,CAAC,MAAW;QAC5B,IAAI,aAAa,GAAoB,EAAE,CAAC;QACxC,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;YAC1B,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC/D,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACtB;SACD;QACD,OAAO,aAAa,CAAC;IACtB,CAAC;IAEO,SAAS,CAAC,MAAW;QAE5B,OAAO,EAAE,CAAC;IACX,CAAC;IAEO,aAAa;QACpB,IAAI,cAAc,GAAoB,EAAE,CAAC;QACzC,KAAI,MAAM,MAAM,IAAI,IAAI,CAAC,UAAU,EAAC;YACnC,IAAI,aAAa,GAAkB,EAAE,CAAC;YACtC,KAAI,MAAM,MAAM,IAAI,IAAI,CAAC,OAAO,EAAC;gBAChC,aAAa,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,MAAM,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;aAC1D;YACD,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACnC;QACD,OAAO,cAAc,CAAC;IACvB,CAAC;IAEO,WAAW;QAClB,IAAI,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAGxC,OAAO,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YACtC,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE;gBAC9B,OAAO,CAAC,CAAC;aACT;iBAAM,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE;gBACrC,OAAO,CAAC,CAAC,CAAC;aACV;iBAAM;gBACN,OAAO,CAAC,CAAC;aACT;QACF,CAAC,CACA,CAAC;IACH,CAAC;CACD;AA5KD,oCA4KC","sourcesContent":["import {InsightDataset, InsightError, InsightResult, ResultTooLargeError} from \"./IInsightFacade\";\nimport {CachedData} from \"./CachedData\";\nimport * as Process from \"process\";\n\nexport class QueryHandler {\n\tprivate dataReport: InsightDataset[];\n\tprivate data: InsightResult[];\n\tprivate setID: string;\n\tprivate order: string;\n\tprivate query: any;\n\tprivate result: any[];\n\tprivate columns: any[];\n\tprivate resultData: InsightResult[];\n\n\tconstructor(query: any, reportSet: InsightDataset[], data: CachedData[]) {\n\t\t// dummy constructor\n\t\tthis.query = query;\n\t\tthis.dataReport = reportSet;\n\t\tthis.data = this.setTranslater(data);\n\t\tthis.setID = data[0].setId;\n\t\tthis.result = data;\n\t\tthis.columns = [];\n\t\tthis.order = \"\";\n\t\tthis.resultData = this.setTranslater(data);\n\t}\n\n\t// translate CachedData into InsightResult that can be more easily referred later\n\tprivate setTranslater(data: CachedData[]): InsightResult[]{\n\t\tlet result = [];\n\t\tfor(const cached of data){\n\t\t\tlet obj: InsightResult = {\n\t\t\t\tdept: cached.dept,\n\t\t\t\tid: cached.id,\n\t\t\t\tavg: cached.avg,\n\t\t\t\tinstructor: cached.instructor,\n\t\t\t\ttitle: cached.title,\n\t\t\t\tpass: cached.pass,\n\t\t\t\tfail: cached.fail,\n\t\t\t\taudit: cached.audit,\n\t\t\t\tuuid: cached.uuid,\n\t\t\t\tyear: cached.year,\n\t\t\t\tsetId: cached.setId\n\t\t\t};\n\t\t\tresult.push(obj);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic queryHelper() {\n\t\ttry {\n\t\t\tlet optionPart = this.query.OPTIONS;\n\t\t\tlet wherePart = this.query.WHERE;\n\t\t\t// update result data feature needed\n\t\t\tthis.optionHandler(optionPart);\n\t\t\t// filter data with the \"WHERE\" key word clause\n\t\t\tthis.resultData = this.whereHandler(wherePart);\n\t\t\t// at this point, this.resultData will be filtered version of cachedDataSet, yet still containing unnecessary info\n\t\t\tthis.resultData = this.resultHandler();\n\t\t\t// at this point only necessary info is present in the resultData, we need to sort it\n\t\t\tthis.order = this.query[\"OPTIONS\"][\"ORDER\"];\n\t\t\tthis.resultData = this.sortHandler();\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t\tif(this.data.length > 5000){\n\t\t\treturn Promise.reject(new ResultTooLargeError(\"result entry exceeds 5000 limit\"));\n\t\t}\n\t\treturn  Promise.resolve(this.resultData);\n\t}\n\n\t// modifies: the current helper's columns aspect, keeps track of what kind of data should we include in the result\n\tpublic optionHandler(optionPart: any) {\n\t\tlet columnPart = optionPart[\"COLUMNS\"];\n\t\tthis.columns = [];\n\t\tfor (const c of columnPart) {\n\t\t\tlet splitv: string = c.split(\"_\",2)[1];\n\t\t\tthis.columns.push(splitv);\n\t\t}\n\t}\n\tpublic whereHandler(wherePart: any): InsightResult[] {\n\t\tlet results: InsightResult[] = [];\n\t\tif (Object.keys(wherePart)[0] === \"NOT\") {\n\t\t\tresults = this.notHandler();\n\t\t}else if(Object.keys(wherePart)[0] === \"AND\" || Object.keys(wherePart)[0] === \"OR\"){\n\t\t\tresults = this.logicHandler(wherePart[Object.keys(wherePart)[0]], Object.keys(wherePart)[0]);\n\t\t}else{\n\t\t\tresults = this.keyHandler(wherePart);\n\t\t}\n\t\treturn results;\n\t}\n\n\n\tprivate notHandler(): InsightResult[] {\n\t\treturn [];\n\t}\n\n\tprivate logicHandler(arr: any[], opCode: string): InsightResult[]{\n\t\treturn [];\n\t}\n\n\tprivate keyHandler(wherePart: any): InsightResult[]{\n\t\tlet curKey = Object.keys(wherePart)[0];\n\t\tif(curKey === \"LT\"){\n\t\t\treturn this.ltHandler(wherePart.LT);\n\t\t}else if(curKey === \"EQ\"){\n\t\t\treturn this.eqHandler(wherePart.EQ);\n\t\t}else if(curKey === \"GT\"){\n\t\t\treturn this.gtHandler(wherePart.GT);\n\t\t}else{\n\t\t\treturn this.isHandler(wherePart.IS);\n\t\t}\n\t}\n\n\tprivate ltHandler(ltPart: any): InsightResult[]{\n\t\tlet returnedArray: InsightResult[] = [];\n\t\tfor (const c of this.data) {\n\t\t\tif (ltPart[Object.keys(ltPart)[0]] > c[Object.keys(c)[0]]) {\n\t\t\t\treturnedArray.push(c);\n\t\t\t}\n\t\t}\n\t\treturn returnedArray;\n\t}\n\n\tprivate eqHandler(eqPart: any): InsightResult[]{\n\t\tlet returnedArray: InsightResult[] = [];\n\t\tfor (const c of this.data) {\n\t\t\tif (eqPart[Object.keys(eqPart)[0]] === c[Object.keys(c)[0]]) {\n\t\t\t\treturnedArray.push(c);\n\t\t\t}\n\t\t}\n\t\treturn returnedArray;\n\t}\n\n\tprivate gtHandler(gtPart: any): InsightResult[]{\n\t\tlet returnedArray: InsightResult[] = [];\n\t\tfor (const c of this.data) {\n\t\t\tif (gtPart[Object.keys(gtPart)[0]] < c[Object.keys(gtPart)[0]]) {\n\t\t\t\treturnedArray.push(c);\n\t\t\t}\n\t\t}\n\t\treturn returnedArray;\n\t}\n\n\tprivate isHandler(isPart: any): InsightResult[]{\n\n\t\treturn [];\n\t}\n\n\tprivate resultHandler(): InsightResult[]{\n\t\tlet handledResults: InsightResult[] = [];\n\t\tfor(const result of this.resultData){\n\t\t\tlet handledResult: InsightResult = {};\n\t\t\tfor(const column of this.columns){\n\t\t\t\thandledResult[`${this.setID}_${column}`] = result[column];\n\t\t\t}\n\t\t\thandledResults.push(handledResult);\n\t\t}\n\t\treturn handledResults;\n\t}\n\n\tprivate sortHandler(): InsightResult[] {\n\t\tlet sortedResult = this.resultData;\n\t\tlet orderKey = this.order.split(\"_\")[1];\n\t\t// if (orderKey === \"avg\" || orderKey === \"pass\" ||\n\t\t// \torderKey === \"fail\" || orderKey === \"audit\" || orderKey === \"year\"){\n\t\treturn sortedResult.sort(function (a, b): number {\n\t\t\tif (a[orderKey] > b[orderKey]) {\n\t\t\t\treturn 1;\n\t\t\t} else if (a[orderKey] < b[orderKey]) {\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3a946ea47ffae99e6f37665889b880a60f155b13","contentHash":"3a387ca29dcb977b28138b4bcfc2ae27eea4637a7dc46f81e19c274b83e8ec86"}}